<?php

/** 
 * Implements hook_menu().
 */
function iica_form_menu() {
  $items = array();
  $items['innovation-agenda-form'] = array(
    'title' => 'Industry Innovation and Competitiveness Agenda',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_iica_form_form_builder'),
    'access arguments' => array('access iica form'),
    'description' => 'Innovation Agenda Form',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/system/innovation-agenda-form'] = array(
    'title' => t('Industry Innovation and Competitiveness Agenda form Settings'),
    'description' => 'Settings for the Industry Innovation and Competitiveness Agenda form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_iica_form_admin_form'),
    'access arguments' => array('access iica settings form'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_permission()
 **/

function iica_form_permission() {
  return array(
    'access iica form' => array(
      'title' => t('Access Industry Innovation and Competitiveness Agenda form'),
      'description' => t('Allow users to access the Industry Innovation and Competitiveness Agenda form.'),
    ),
    'access iica settings form' => array(
      'title' => t('Access Industry Innovation and Competitiveness Agenda settings'),
      'description' => t('Allow users to access the Industry Innovation and Competitiveness Agenda settings.'),
    ),
  );
}

function _iica_form_admin_form() {
  $form = array();

  $vids = taxonomy_get_vocabularies();

  foreach ($vids as $vid => $item) {
    $options[$item->vid] = $item->name;
  }
  
  $form['topic_taxonomy'] = array(
    '#type' => 'select',
    '#title' => 'Topics list',
    '#default_value' => variable_get('topic_taxonomy','industry_innovation_and_competitiveness_agenda'),
    '#description' => t('Select the taxonomy you wish to use to get the list of topics from.'),
    '#required' => TRUE,
    '#options' => $options,
  );

  $form['uninstall_options'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Uninstall options'),
  );

  $form['uninstall_options']['remove_taxonomies'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove installed taxonomies?'),
    '#default_value' => variable_get('remove_taxonomies', FALSE),
  );
  $form['uninstall_options']['remove_fields'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove installed fields?'),
    '#default_value' => variable_get('remove_fields', FALSE),
  );
  $form['uninstall_options']['remove_role'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove installed role?'),
    '#default_value' => variable_get('remove_role', FALSE),
  );
  return system_settings_form($form);
}

/**
 * Callback function to get options for form elements.
 */

function _iica_form_get_options($machine_name) {
  $v = taxonomy_vocabulary_machine_name_load($machine_name);
  $terms = taxonomy_get_tree($v->vid);
  foreach ($terms as $term) {
    $options[$term->tid] = $term->name;
  }
  return $options;
}

/**
 * Custom function to get users by role.
 */

function _iica_form_load_users_by_role($role_name) {
  $role = user_role_load_by_name($role_name);
  $query = 'SELECT ur.uid
    FROM {users_roles} AS ur
    WHERE ur.rid = :rid';
  $result = db_query($query, array(':rid' => $role->rid));
  $uids = $result->fetchCol();
  return user_load_multiple($uids);
}

/**
 * Callback function for the form.
 */

function _iica_form_form_builder($form_state) {

  // Check that the correct vocabularies exist. If not, return an empty page.

  if(!taxonomy_vocabulary_machine_name_load('states') ||
      !taxonomy_vocabulary_machine_name_load('org_types') ||
      !taxonomy_vocabulary_machine_name_load('industry_innovation_and_competitiveness_agenda')) {
    drupal_set_message('The form is missing required data. Please ensure that all required vocabularies are installed.');
    return;
  }
  
  $form['details'] = array(
    '#type' => 'fieldset',
    '#title' => t('You and your business'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['details']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#description' => t('Please enter your name.'),
    '#size' => 20,
    '#maxlength' => 40,
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Enter your name'),
    ),
    '#default_value' => 'test',
  );

  $form['details']['organisation'] = array(
    '#type' => 'textfield',
    '#title' => t('Business/Organisation'),
    '#description' => t('Please enter your business or organisation.'),
    '#size' => 40,
    '#maxlength' => 40,
    '#attributes' => array(
      'placeholder' => t('Business/Organisation name'),
    ),
    '#default_value' => 'test',
  );

  $form['details']['orgtype'] = array(
    '#type' => 'radios',
    '#title' => t('Type of Business/Organisation'),
    '#description' => t('Please select your business or organisation type.'),
    '#options' => _iica_form_get_options('org_types'),
    '#states' => array(
      'visible' => array(
        ':input[name="organisation"]' => array('filled' => TRUE),
      ),
    ),
  );

  $form['details']['state'] = array(
    '#type' => 'select',
    '#title' => t('State/Territory'),
    '#required' => TRUE,
    '#options' => _iica_form_get_options('states'),
    '#default_value' => 'ACT',
  );

  $form['details']['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City/Town'),
    '#description' => t('Please enter your city or town.'),
    '#size' => 20,
    '#maxlength' => 40,
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('City/Town'),
    ),
    '#default_value' => 'test',
  );

  $form['details']['phone'] = array (
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#description' => t('Please enter your phone number including your area code.'),
    '#size' => 12,
    '#maxlength' => 12,
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('01 2345 6789'),
    ),
    '#default_value' => '02 1234 5678',
  );

  $form['details']['email'] = array (
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#description' => t('Please enter your email address.'),
    '#size' => 20,
    '#maxlength' => 40,
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('name@domain.com.au'),
    ),
    '#default_value' => 'jesse.boyd@industry.gov.au',
  );

  $form['topics'] = array(
    '#type' => 'fieldset',
    '#title' => t('Topics'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['topics']['topic'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Topic'),
    '#description' => t('Please select one or more topics.'),
    '#options' => _iica_form_get_options(taxonomy_vocabulary_load(variable_get('topic_taxonomy'))->machine_name),
    '#required' => TRUE,
    '#default_value' => array(0),
  );

  $form['topics']['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Leave a message/feedback'),
    '#description' => t('If there is anything else you would like to tell us, please add it here.'),
    '#attributes' => array(
      'placeholder' => t('Please enter a brief message.'),
    ),
  );

  // Submit button.
  $form['submit'] = array (
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

/**
 * Implements hook_mail().
 */

function iica_form_mail($key, &$message, $params) {

  $values = $params['values'];
  $emails = $params['emails'];

  $options = array(
    'langcode' => $message['language']->language,
  );

  $headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8;',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal',
  );

  foreach ($headers as $key => $value) {
    $message['headers'][$key] = $value;
  }

  $name = t($values['name']);
  $org = $values['organisation'];
  $type = taxonomy_term_load($values['orgtype'])->name;
  $state = taxonomy_term_load($values['state'])->name;
  $city = t($values['city']);
  $phone = t($values['phone']);
  $email = t($values['email']);
  $topics = '';

  foreach ($emails['topics'] as $topic => $item) {
    $topics .= '<li>' . taxonomy_term_load($item)->name . '</li>';
  }

  $text = t($values['message']);
  $cc = $email;
  $body =   '<p>A user has requested to be added to the Industry Innovation Competitiveness Agenda email list:</p>' .
            '<p><strong>Name:</strong>&nbsp;' . $name . '</p>' .
            '<p><strong>Organisation:</strong>&nbsp;' . check_plain($org) . '</p>' .
            '<p><strong>Organisation Type:</strong>&nbsp;' . $type . '</p>' .
            '<p><strong>State:</strong>&nbsp;' . $state . '</p>' .
            '<p><strong>City:</strong>&nbsp;' . check_plain($city) . '</p>' .
            '<p><strong>Phone:</strong>&nbsp;' . $phone . '</p>' .
            '<p><strong>Email:</strong>&nbsp;<a href="mailto:' . $email . '">' . $email . '</a></p>' .
            '<p><strong>Topics:</strong></p><ul>' . $topics . '</ul>' .
            '<p><strong>Message:</strong>&nbsp;' . check_plain($text) . '</p>' .
            '<p><em>This would be sent to ' . $emails['email'] . '.</em></p>';

  $message['subject'] = t('Email from ' . $email . ' [SEC=UNCLASSIFIED]');
  $message['body'][] = $body;
}

/**
 * Sends an e-mail.
 *
 * @param array $form_values
 *   An array of values from the contact form fields that were submitted.
 * @param array $emails
 *   An array of values used to build specific emails. 
 */

function iica_form_mail_send($form_values, $emails) {

  $module = 'iica_form';
  $params = array(
    'values' => $form_values,
    'emails' => array(),
  );
  $from = 'web.development@industry.gov.au';
  $language = language_default();

  $send = TRUE;
  foreach($emails as $email=>$item) {
      $key = 'iica_form_email_' . $email;
      $to = 'jesse.boyd@industry.gov.au'; // For testing only.
      //$to = $emails['email'];
      $params['emails'] = $item;
      $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  }

  if ($result['result'] == TRUE) {
    drupal_set_message(t('Your message has been sent.'));
  } else {
    drupal_set_message(t('There was a problem sending your message and it has not been sent.'), 'error');
  }
}

function _iica_form_form_builder_validate($form, &$form_state) {
  // Validates the form.
  $email = $form_state['values']['email'];
  $phone = $form_state['values']['phone'];

  if(!valid_email_address($email)) {
    form_set_error('email', 'Please enter a valid email address.');
  }
  if (strlen($phone) > 0 && !preg_match('/^\D*0(\D*\d){9}\D*$/', $phone)) {
    form_set_error('phone', 'Please enter a valid Australian phone number, either a landline in the format 02 xxxx xxxx or 04xx xxxx xxxx.');
  }
}

function _iica_form_form_builder_submit($form, &$form_state) {
  // Check the selected topics against those stored in the $destinations array.
  
  $topics = $form_state['values']['topic'];

  // Get array of users by the correct role.
  $accounts = _iica_form_load_users_by_role('iica_user');

  // Assign tids to the users' email ,along with other useful information.
  foreach ($accounts as $account) {
    $user_topics = array();
    foreach ($account->field_iica_topic_reference['und'] as $tid) {
      array_push($user_topics, $tid['tid']);
    }
    $destinations[$account->uid]['topics'] = $user_topics;
    $destinations[$account->uid]['name'] = $account->name;
    $destinations[$account->uid]['email'] = $account->mail;
    $destinations[$account->uid]['uid'] = $account->uid;
    // We now have a list of destinations (email addresses) with tids assigned.
  }

  // Now, search through the topics assigned to each destination for the topics submitted to the form. Add the associated emails to the $emails array/
  $emails = array();

  foreach ($destinations as $destination) {
    foreach ($topics as $topic) {
      if ($topic !== 0 and in_array($topic, $destination['topics'])) {
        $index = $destination['uid'];
        // If the topic is not empty and the topic is in the list of topics assigned to the destination, add the topic to the $emails array.
        $emails[$index]['topics'][] = $topic;
        if (!in_array($destination['email'], $emails)) {
        // If the destination email is not already in the $emails array, add it, along with a name to use.
        $emails[$index]['email'] = $destination['email'];
        $emails[$index]['name'] = $destination['name'];
      }
      } 
      
    }
  }
  // Invoke the mail handler and send along the $emails array.
  iica_form_mail_send($form_state['values'], $emails);
}
