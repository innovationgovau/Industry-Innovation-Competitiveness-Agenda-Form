<?php

/**
 * Implements hook_install().
 */

function iica_form_install() {
  // Check to see if the database exists, if not, create it based on hook_schema().
  if(!db_table_exists('iica_form')) {
    drupal_install_schema('iica_form');
  }
  // Check to make sure the vocabulary doesn't exist, if not, create it.
  if(!taxonomy_vocabulary_machine_name_load('industry_innovation_and_competitiveness_agenda')) {
    drupal_set_message('Creating "IICA" taxonomy.', 'status');
    $vocab = (object) array(
      'name' => 'Industry Innovation and Competitiveness Agenda',
      'machine_name' => 'industry_innovation_and_competitiveness_agenda',
      'description' => 'Lists topics available for subscription in the IICA form, along with the appropriate users to email.',
      'hierarchy' => 1,
      'module' => 'taxonomy',
      'weight' => 0,
    );
    taxonomy_vocabulary_save($vocab);

    $topics = array(
      0 => t('The Industry and Innovation Competitiveness Agenda – overall'),
      1 => t('1. Accepted trusted international standards and risk assessments'),
      2 => t('1a. Streamlining certification of medical devices'),
      3 => t('1b. Streamlining industrial chemicals assessments'),
      4 => t('2. Shifting the culture of regulation'),
      5 => t('3. Expanding access to the Commonwealth workers’ compensation scheme'),
      6 => t('4. Streamlining construction regulation'),
      7 => t('5. Reducing superannuation compliance burden'),
      8 => t('6. Trusted Trader Programme'),
      9 => t('7. Removing barriers to professional services investment'),
      10 => t('8. Examining coastal shipping regulations'),
      11 => t('9. Increasing the focus on STEM and innovation in schools (including P-Tech)'),
      12 => t('10. Improving the Vocational Education and Training system'),
      13 => t('11. Liberalising the subclass 457 visa programme'),
      14 => t('12. Expanding the investment visa programme'),
      15 => t('13. Establishing Industry Growth Centres'),
      16 => t('14. Enhancing commercial returns from research (including Science Council)'),
      17 => t('15. Improving taxation arrangements for Employee Share Schemes'),
      18 => t('16. Crowd-sourced equity funding framework'),
      19 => t('17. Small Business engagement principles'),
    );

    foreach($topics as $topic => $item) {
      $term = (object) array(
        'name'=> $item,
        'description' => $item,
        'vid' => $vocab->vid,
        'weight' => $topic,
      );
      taxonomy_term_save($term);
    }
  } else {
    drupal_set_message('"IICA" vocabulary exists.', 'status');
  }

  if(!taxonomy_vocabulary_machine_name_load('states')) {
    drupal_set_message('Creating "States" taxonomy...', 'status');
    $vocab = (object) array(
      'name' => 'States',
      'machine_name' => 'states',
      'description' => 'A list of Australian states.',
      'hierarchy' => 1,
      'module' => 'taxonomy',
      'weight' => 0,
    );
    taxonomy_vocabulary_save($vocab);

    $states = array(
      'ACT' => t('ACT'),
      'NSW' => t('NSW'),
      'NT' => t('NT'),
      'Qld' => t('Qld'),
      'SA' => t('SA'),
      'Tas' => t('Tas'),
      'Vic' => t('Vic'),
      'WA' => t('WA'),
    );

    foreach ($states as $state) {
      $term = (object) array(
        'name'=> $state,
        'description' => $state,
        'vid' => $vocab->vid,
      );
      taxonomy_term_save($term);
    }
  } else {
    drupal_set_message('"States" vocabulary exists.','status');
  }

  if(!taxonomy_vocabulary_machine_name_load('org_types')) {
    drupal_set_message('Creating "Organisation Types" taxonomy...', 'status');
    $vocab = (object) array(
      'name' => 'Organisation Types',
      'machine_name' => 'org_types',
      'description' => 'A list of organisation types.',
      'hierarchy' => 1,
      'module' => 'taxonomy',
      'weight' => 0,
    );
    taxonomy_vocabulary_save($vocab);

    $orgtypes = drupal_map_assoc(array(
      0 => t('Research organisation'),
      1 => t('University'),
      2 => t('SME'),
      3 => t('Medium-sized enterprise'),
      4 => t('Multinational'),
      5 => t('Industry association'),
      6 => t('State or Territory Government'),
      7 => t('NGO'),
      8 => t('Other'),
    ));

    foreach ($orgtypes as $orgtype => $item) {
      $term = (object) array(
        'name'=> $item,
        'description' => $item,
        'vid' => $vocab->vid,
        'weight' => $orgtype,
      );
      taxonomy_term_save($term);
    }
  } else {
    drupal_set_message('"Organisation types" vocabulary exists.','status');
  }

  // Create fields.
  if(!field_info_field('field_iica_topic_reference')){
    field_cache_clear();
    field_associate_fields('iica_form');
    foreach(_iica_form_installed_fields() as $field) {
      field_create_field($field);
    }
    foreach (_iica_form_installed_instances() as $field_instance) {
      field_create_instance($field_instance);
    }
  }

  // Create role
  if(!user_role_load_by_name('iica_user')) {
    _iica_form_create_role('iica_user');
  }
}

function _iica_form_create_role($name) {
  $role = new stdClass();
  $role->name = $name;
  user_role_save($role);
  drupal_set_message('Created "IICA User" role.');
}

function _iica_form_installed_fields() {
  $field = array(
    'field_iica_topic_reference' => array(
      'field_name' => 'field_iica_topic_reference',
      'active' => 1,
      'cardinality' => -1,
      'deleted' => 0,
      'entity_types' => array(),
      'foreign keys' => array(
        'tid' => array(
          'columns' => array(
            'tid' => 'tid',
          ),
          'table' => 'taxonomy_term_data',
        ),
      ),
      'module' => 'taxonomy',
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'industry_innovation_and_competitiveness_agenda',
            'parent' => 0,
          ),
        ),
      ),
      'translatable' => 0,
      'type' => 'taxonomy_term_reference',
    ),
  );
  return $field;
}

function _iica_form_installed_instances() {
  return array(
    'field_iica_topic_reference' => array(
      'bundle' => 'user',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'taxonomy',
          'settings' => array(),
          'type' => 'taxonomy_term_reference_link',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'user',
      'field_name' => 'field_iica_topic_reference',
      'label' => 'Topic Reference',
      'required' => 0,
      'settings' => array(
        'user_register_form' => 1,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_buttons',
        'weight' => 12,
      ),
    ),
  );
}

/**
 * Implements hook_schema()
 **/

function iica_form_schema() {
  $schema['iica_form'] = array(
    'description' => 'A table to store data on form submissions. It only holds a non-identifiable subset of the information provided by the user.',
    'fields' => array(
      'form_id' => array(
        'description' => 'The count of the form.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'Unix timestamp of the form entry.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'ipaddress' => array(
        'description' => 'IP Address of the computer used to enter the form.',
        'type' => 'varchar',
        'length' => 40,
        'not null' => TRUE,
        'default' => '',
      ),
      'organisation' => array(
        'description' => 'Name of the organisation.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'orgtype' => array(
        'description' => 'Type of organisation.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'state' => array(
        'description' => 'State where the submitter resides.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 3,
        'default' => '',
      ),
      'city' => array(
        'description' => 'City where the submitter resides',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'default' => '',
      ),
      'topics' => array(
        'description' => 'Selected topics.',
        'type' => )
      'reference' => array(
        'description' => 'A basic reference number used to refer to particular form entries.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('form_id'),
  );
  return $schema;
}

/**
* Implements hook_uninstall().
*/
function iica_form_uninstall() {
  // Check if database exists and remove it if does based on hook_schema().
  if(db_table_exists('apprenticeships_ambassadors_form')) {
    drupal_uninstall_schema('apprenticeships_ambassadors_form');
  }
  if(variable_get('remove_taxonomies')) {
    $vocab = taxonomy_vocabulary_machine_name_load('industry_innovation_and_competitiveness_agenda');
    taxonomy_vocabulary_delete($vocab->vid);
    drupal_set_message('Deleted "IICA" taxonomy.', 'status');
  
    $vocab = taxonomy_vocabulary_machine_name_load('states');
    taxonomy_vocabulary_delete($vocab->vid);
    drupal_set_message('Deleted "States" taxonomy.', 'status');

    $vocab = taxonomy_vocabulary_machine_name_load('org_types');
    taxonomy_vocabulary_delete($vocab->vid);
    drupal_set_message('Deleted "Organisation Types" taxonomy.', 'status');
  }

  if (variable_get('remove_fields')) {
    if(field_info_field('field_iica_topic_reference')) {
      field_delete_field('field_iica_topic_reference');
      field_purge_batch(100);
      drupal_set_message('Deleted IICA Topic Reference field', 'status');
    }
  }

  if(variable_get('remove_role')) {
    if(user_role_load_by_name('iica_user')) {
      user_role_delete('iica_user');
      drupal_set_message('Role "IICA User" deleted.');
    }
  }
}
